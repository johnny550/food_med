"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var platform_1 = require("tns-core-modules/platform");
var enums_1 = require("tns-core-modules/ui/enums");
var frameModule = require("tns-core-modules/ui/frame");
var toast_common_1 = require("./toast.common");
__export(require("./toast.common"));
var Toasty = (function () {
    function Toasty(text, duration, position) {
        this._text = text;
        this.setToastPosition(position);
        this.setToastDuration(duration);
        return this;
    }
    Object.defineProperty(Toasty.prototype, "position", {
        get: function () {
            return this._position;
        },
        set: function (value) {
            if (value) {
                this._position = value;
                this.setToastPosition(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Toasty.prototype, "duration", {
        get: function () {
            return this._duration;
        },
        set: function (value) {
            if (value) {
                this._duration = value;
                this.setToastDuration(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Toasty.prototype.show = function () {
        if (!this._text) {
            throw new Error('Text is not set');
        }
        else {
            Toasty.getView().makeToast(this._text);
        }
    };
    Toasty.prototype.cancel = function () {
        Toasty.getView().hideToasts();
    };
    Toasty.prototype.setToastPosition = function (value) {
        switch (value) {
            case toast_common_1.ToastPosition.TOP:
                CSToastManager.setDefaultPosition(CSToastPositionTop);
                break;
            case toast_common_1.ToastPosition.CENTER:
                CSToastManager.setDefaultPosition(CSToastPositionCenter);
                break;
            case toast_common_1.ToastPosition.BOTTOM:
                CSToastManager.setDefaultPosition(CSToastPositionBottom);
                break;
            default:
                CSToastManager.setDefaultPosition(CSToastPositionBottom);
                break;
        }
        return this;
    };
    Toasty.prototype.setToastDuration = function (value) {
        switch (value) {
            case toast_common_1.ToastDuration.SHORT:
                CSToastManager.setDefaultDuration(2.0);
                break;
            case toast_common_1.ToastDuration.LONG:
                CSToastManager.setDefaultDuration(4.0);
                break;
            default:
                CSToastManager.setDefaultDuration(2.0);
                break;
        }
        return this;
    };
    Toasty.getView = function () {
        if (!frameModule.topmost()) {
            throw new Error('There is no topmost');
        }
        else {
            var viewController = frameModule.topmost().viewController;
            if (viewController.presentedViewController) {
                if (platform_1.device.deviceType !== enums_1.DeviceType.Tablet) {
                    while (viewController.presentedViewController) {
                        viewController = viewController.presentedViewController;
                    }
                }
            }
            return viewController.view;
        }
    };
    return Toasty;
}());
exports.Toasty = Toasty;
//# sourceMappingURL=toasty.ios.js.map